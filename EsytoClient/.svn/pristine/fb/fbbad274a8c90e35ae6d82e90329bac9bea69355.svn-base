package com.ec2.yspay.activity;

import java.io.File;

import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.ColorDrawable;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.text.InputFilter;
import android.text.InputType;
import android.text.TextUtils;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout.LayoutParams;
import android.widget.PopupWindow;
import android.widget.PopupWindow.OnDismissListener;
import android.widget.TextView;

import com.ec2.yspay.CityListActivity;
import com.ec2.yspay.R;
import com.ec2.yspay.common.AsyncImageLoader;
import com.ec2.yspay.common.Log;
import com.ec2.yspay.common.MyApplication;
import com.ec2.yspay.common.UploadFileTask;
import com.ec2.yspay.http.OnTaskFinished;
import com.ec2.yspay.http.response.BooleanResponse;
import com.ec2.yspay.http.response.GetStoreMsgResponse;
import com.ec2.yspay.http.task.BaseTask;
import com.ec2.yspay.http.task.GetStoreMsgTask;
import com.ec2.yspay.http.task.UpdateStoreTask;
import com.ec2.yspay.widget.RoundImageViewNoBorder;

public class StoreMainActivity extends BaseActivity implements OnClickListener
{
    private  String uploadUrl = "";
    private TextView tvShopName,tvShopAddr,tvShopCity,tvPhone;
    private String shopName;
    private String shopPhone;
    private String shopAddress;
    private String province;
    private String city;
    private String tShopName,tShopAddress,tShopPhone,tProvince,tCity;
    private RoundImageViewNoBorder ivLogo;
    private final int START_ALBUM_REQUESTCODE = 1;
    private final int CAMERA_WITH_DATA = 2;
    private final int CROP_RESULT_CODE = 3;
    public static final String TMP_PATH = "clip_temp.jpg";
    private String shopCode;
    private String shopLogoImage,shopLogoImageUrl;
    private AsyncImageLoader asyImg = new AsyncImageLoader(this);
    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_store_main);
        shopCode = getIntent().getStringExtra("shopCode");
        getShopMsg();
        tvShopName = (TextView)findViewById(R.id.tv_company_name);
        tvShopAddr = (TextView)findViewById(R.id.tv_company_addr);
        tvShopCity = (TextView)findViewById(R.id.tv_company_city);
        tvPhone = (TextView)findViewById(R.id.tv_phone_num);
        ivLogo = (RoundImageViewNoBorder)findViewById(R.id.iv_logo);
        tvShopCity.setOnClickListener(this);
        tvShopName.setOnClickListener(this);
        tvShopAddr.setOnClickListener(this);
        ivLogo.setOnClickListener(this);
        tvPhone.setOnClickListener(this);
        uploadUrl = BaseTask.URL+"/app/updateShopLogoImage/"+MyApplication.mDataCache.token
            +"_"+shopCode;
    }
    private void initView(){
        tvShopName.setText(shopName);
        tvShopAddr.setText(shopAddress);
        tvPhone.setText(shopPhone);
        tvShopCity.setText(province+"/"+city);
        asyImg.LoadImage(shopLogoImageUrl,shopLogoImage
            , ivLogo,getResources().getDrawable(R.drawable.company_default_logo));
    }
    /**
     * 重载方法
     * @param requestCode
     * @param resultCode
     * @param data
     */
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data)
    {
        // TODO Auto-generated method stub
        if (resultCode != RESULT_OK) {
            return;
        }
        switch (requestCode) {
            case CROP_RESULT_CODE:
                String path = data.getStringExtra(ClipImageActivity.RESULT_PATH);
                Bitmap photo = BitmapFactory.decodeFile(path);
//                ivTouxiang.setImageBitmap(photo);
                uploadTouxiang(path,photo);
                break;
            case START_ALBUM_REQUESTCODE:
                startCropImageActivity(getFilePath(data.getData()));
                break;
            case CAMERA_WITH_DATA:
                // 照相机程序返回的,再次调用图片剪辑程序去修剪图片
                startCropImageActivity(Environment.getExternalStorageDirectory()
                        + "/" + TMP_PATH);
                break;
            case 101://城市列表
                tProvince = data.getStringExtra("province");
                tCity = data.getStringExtra("city");
                updateShopMsg();
                break;
            }
    }
    /**
     * 通过uri获取文件路径
     * 
     * @param mUri
     * @return
     */
    public String getFilePath(Uri mUri) {
        try {
            return getFilePathByUri(mUri);
        } catch (Exception ex) {
            ex.printStackTrace();
            return null;
        }
    }
    private String getFilePathByUri(Uri mUri) throws Exception {
      if (!TextUtils.isEmpty(mUri.getAuthority())) {    
          Cursor cursor = getContentResolver().query(mUri,  
                  new String[] { MediaStore.Images.Media.DATA },null, null, null);    
          if (null == cursor) {    
              return null;    
          }
          cursor.moveToFirst();    
          String path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));  
          cursor.close(); 
          return path;
      } else {    
          return mUri.getPath();    
      } 
  }
    /**
     * 重载方法
     */
    @Override
    protected void onResume()
    {
        // TODO Auto-generated method stub
        super.onResume();
        
    }
    private void updateShopMsg(){
        UpdateStoreTask task = new UpdateStoreTask(mContext);
        task.setShopName(tShopName);
        task.setProvince(tProvince);
        task.setCity(tCity);
        task.setShopCode(shopCode);
        task.setAddress(tShopAddress);
        task.setPhone(tShopPhone);
        task.setProgressVisiable(true);
        task.setOnTaskFinished(new OnTaskFinished()
        {
            
            @Override
            public void onSucc(Object obj)
            {
                // TODO Auto-generated method stub
                showToast("修改成功！");
                shopName = tShopName;
                shopAddress = tShopAddress;
                province = tProvince;
                city = tCity;
                shopPhone = tShopPhone;
                initView();
            }
            
            @Override
            public void onFail(Object obj)
            {
                // TODO Auto-generated method stub
                BooleanResponse response = (BooleanResponse)obj;
                showToast(response.getResultDesc());
                tShopName = shopName;
                tShopAddress = shopAddress;
                tProvince = province;
                tCity = city;
                tShopPhone = shopPhone;
                initView();
            }
        });
        task.execute();
    }
    private void getShopMsg(){
        GetStoreMsgTask task = new GetStoreMsgTask(mContext);
        task.setShopCode(shopCode);
        task.setOnTaskFinished(new OnTaskFinished()
        {
            
            @Override
            public void onSucc(Object obj)
            {
                // TODO Auto-generated method stub
                GetStoreMsgResponse response = (GetStoreMsgResponse)obj;
                tShopName = shopName = response.getShopName();
                tShopAddress = shopAddress = response.getShopAddress();
                tShopPhone = shopPhone = response.getShopPhone();
                tProvince = province = response.getProvince();
                tCity = city = response.getCity();
                shopLogoImage = response.getShopLogoImage();
                shopLogoImageUrl = response.getShopLogoImageUrl();
                initView();
            }
            
            @Override
            public void onFail(Object obj)
            {
                // TODO Auto-generated method stub
                GetStoreMsgResponse response = (GetStoreMsgResponse)obj;
                showToast(response.getResultDesc());
                finish();
            }
        });
        task.setProgressVisiable(true);
        task.execute();
    }
    /**
     * 单行名称修改
     * state:0 门店名称,1 门店地址， 2 联系电话；
     * @author   罗洪祥
     * @version  V001Z0001
     * @date     2015年11月5日
     * @see  [相关类/方法]
     * @since  [产品/模块版本]
     */
    private void showNamePopwindow(String hint,final int state){
        View outerView = LayoutInflater.from(mContext).inflate(R.layout.layout_pop_update_name, null);
        final EditText tvName = (EditText)outerView.findViewById(R.id.et_update_name);
        tvName.setHint(hint);
        TextView tvSure = (TextView)outerView.findViewById(R.id.tv_sure);
        TextView tvCancel = (TextView)outerView.findViewById(R.id.tv_cancel);
        tvSure.setOnClickListener(new OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                // TODO Auto-generated method stub
                if(state==0){
                    tShopName = tvName.getText().toString();
                }else if(state==1){
                    tShopAddress = tvName.getText().toString();
                }else if(state==2){
                    tShopPhone = tvName.getText().toString();
                }
                
                updateShopMsg();
                popupWindow.dismiss();
            }
        });
        tvCancel.setOnClickListener(new OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                // TODO Auto-generated method stub
                popupWindow.dismiss();
            }
        });
        showPopupwindow(outerView);
    }
    /**
     * 电话号码修改
     * @author   罗洪祥
     * @version  V001Z0001
     * @date     2015年11月5日
     * @see  [相关类/方法]
     * @since  [产品/模块版本]
     */
    private void showPhonePopwindow(){
        View outerView = LayoutInflater.from(mContext).inflate(R.layout.layout_pop_update_name, null);
        final EditText tvName = (EditText)outerView.findViewById(R.id.et_update_name);
        tvName.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_VARIATION_NORMAL);
        InputFilter[] filters = {new InputFilter.LengthFilter(11)};
        tvName.setFilters(filters);
        tvName.setHint("请输入联系电话");
        TextView tvSure = (TextView)outerView.findViewById(R.id.tv_sure);
        TextView tvCancel = (TextView)outerView.findViewById(R.id.tv_cancel);
        tvSure.setOnClickListener(new OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                // TODO Auto-generated method stub
                tShopPhone = tvName.getText().toString();
                updateShopMsg();
                popupWindow.dismiss();
            }
        });
        tvCancel.setOnClickListener(new OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                // TODO Auto-generated method stub
                popupWindow.dismiss();
            }
        });
        showPopupwindow(outerView);
    }
    /**
     * 修改头像入口
     * 
     * @author   罗洪祥
     * @version  V001Z0001
     * @date     2015年12月7日
     * @see  [相关类/方法]
     * @since  [产品/模块版本]
     */
    private void showPicPopwindow(){
        View outerView = LayoutInflater.from(mContext).inflate(R.layout.layout_pop_update_touxiang, null);
        Button btnLocal = (Button)outerView.findViewById(R.id.btn_pic_local);
        Button btnTakePhoto = (Button)outerView.findViewById(R.id.btn_pic_takephoto);
        btnLocal.setOnClickListener(new OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                // TODO Auto-generated method stub
                startAlbum();
                popupWindow.dismiss();
            }
        });
        btnTakePhoto.setOnClickListener(new OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                // TODO Auto-generated method stub
                startCapture();
                popupWindow.dismiss();
            }
        });
        showPopupwindow(outerView);
    }
    private void startAlbum() {
        Intent intent = new Intent();  
        intent.setAction(Intent.ACTION_PICK);  
        intent.setType("image/*");  
        startActivityForResult(intent, START_ALBUM_REQUESTCODE);
    }
    private void startCapture() {
        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
        intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(new File(
                Environment.getExternalStorageDirectory(), TMP_PATH)));
        startActivityForResult(intent, CAMERA_WITH_DATA);
    }
 // 裁剪图片的Activity
    private void startCropImageActivity(String path) {
        if(path==null){
            showToastLong("图片路径未找到！");
        }else{
            ClipImageActivity.startActivity(this, path, CROP_RESULT_CODE);
        }
    }
    
    private PopupWindow popupWindow;
    /**
     * 弹框复用方法
     * 
     * @author   罗洪祥
     * @version  V001Z0001
     * @date     2015年11月4日
     * @see  [相关类/方法]
     * @since  [产品/模块版本]
     */
    private void showPopupwindow(View outerView){
        popupWindow = new PopupWindow(outerView, LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT, true);  
        popupWindow.setFocusable(true);
        popupWindow.setOutsideTouchable(true);
      //设置SelectPicPopupWindow弹出窗体动画效果  
        popupWindow.setAnimationStyle(R.style.PopupAnimation);  
        //实例化一个ColorDrawable颜色为半透明  
        ColorDrawable dw = new ColorDrawable(0xb0000000);  
     // 设置PopupWindow弹出软键盘模式（此处为覆盖式）
        popupWindow.setSoftInputMode(PopupWindow.INPUT_METHOD_NEEDED);
        popupWindow.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);
//        //产生背景变暗效果
        popupWindow.setBackgroundDrawable(dw);
        WindowManager.LayoutParams lp=getWindow().getAttributes();
        lp.alpha = 0.4f;
        getWindow().setAttributes(lp);
        //设置SelectPicPopupWindow弹出窗体的背景  
        popupWindow.setOnDismissListener(new OnDismissListener()
        {
            
            @Override
            public void onDismiss()
            {
                // TODO Auto-generated method stub
                WindowManager.LayoutParams lp=getWindow().getAttributes();
                lp.alpha = 1f;
                getWindow().setAttributes(lp);
                
                //
            }
        });
        popupWindow.showAtLocation(findViewById(R.id.ll_main), Gravity.BOTTOM|Gravity.CENTER_HORIZONTAL, 0, 0);
    }
    /**
     * 重载方法
     * @param v
     */
    @Override
    public void onClick(View v)
    {
        // TODO Auto-generated method stub
        switch(v.getId()){
            case R.id.tv_company_city:
                Intent cityIntent = new Intent(mContext, CityListActivity.class);
                startActivityForResult(cityIntent, 101);
                break;
            case R.id.tv_company_name:
                showNamePopwindow("请输入门店名称", 0);
                break;
            case R.id.tv_company_addr:
                showNamePopwindow("请输入门店地址", 1);
                break;
            case R.id.iv_logo:
                showPicPopwindow();
                break;
            case R.id.tv_phone_num:
                showPhonePopwindow();
                break;
        }
    }
  //上传头像
    private void uploadTouxiang(String filePath,final Bitmap photo){
        Log.i("upload", "上传头像："+filePath+"\n上传地址："+uploadUrl);
        UploadFileTask task = new UploadFileTask(mContext);
        task.setFilePath(filePath);
        task.setUploadUrl(uploadUrl);
        task.setProgressMsg("正在上传头像，请稍等...");
        task.setProgressVisiable(true);
        task.setOnTaskFinished(new OnTaskFinished()
        {
            @Override
            public void onSucc(Object obj)
            {
                // TODO Auto-generated method stub
                getShopMsg();
            }
            
            @Override
            public void onFail(Object obj)
            {
                // TODO Auto-generated method stub
                showToast("头像设置失败！");
            }
        });
        task.execute();
    }
}
